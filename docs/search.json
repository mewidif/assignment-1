[
  {
    "objectID": "border.html",
    "href": "border.html",
    "title": "Border Crossing Entry Data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(ggthemes)\nlibrary(scales)\nlibrary(plotly)\n\n\nshow &lt;- read_csv(\"01-unclean/Border_Crossing_Entry_Data.csv\")\n\nRows: 397152 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Port Name, State, Port Code, Border, Date, Measure, Point\ndbl (3): Value, Latitude, Longitude\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nshow\n\n\n  \n\n\n\n\nborder &lt;- read_csv(\"01-unclean/Border_Crossing_Entry_Data.csv\") |&gt;\n  clean_names() |&gt;\n  mutate(\n    border_year = my(date),\n    year = year(border_year)\n  ) |&gt;\n  select(\n    port_name,\n    state, \n    border, \n    year, \n    measure, \n    value\n  )\n\nRows: 397152 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Port Name, State, Port Code, Border, Date, Measure, Point\ndbl (3): Value, Latitude, Longitude\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nborder\n\n\n  \n\n\n\n\n\n\nborder |&gt;\n  write_rds(\"02-clean/border.rds\")",
    "crumbs": [
      "Border Crossing Entry Data"
    ]
  },
  {
    "objectID": "border.html#setup",
    "href": "border.html#setup",
    "title": "Border Crossing Entry Data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(ggthemes)\nlibrary(scales)\nlibrary(plotly)\n\n\nshow &lt;- read_csv(\"01-unclean/Border_Crossing_Entry_Data.csv\")\n\nRows: 397152 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Port Name, State, Port Code, Border, Date, Measure, Point\ndbl (3): Value, Latitude, Longitude\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nshow\n\n\n  \n\n\n\n\nborder &lt;- read_csv(\"01-unclean/Border_Crossing_Entry_Data.csv\") |&gt;\n  clean_names() |&gt;\n  mutate(\n    border_year = my(date),\n    year = year(border_year)\n  ) |&gt;\n  select(\n    port_name,\n    state, \n    border, \n    year, \n    measure, \n    value\n  )\n\nRows: 397152 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Port Name, State, Port Code, Border, Date, Measure, Point\ndbl (3): Value, Latitude, Longitude\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nborder\n\n\n  \n\n\n\n\n\n\nborder |&gt;\n  write_rds(\"02-clean/border.rds\")",
    "crumbs": [
      "Border Crossing Entry Data"
    ]
  },
  {
    "objectID": "border.html#analysis-and-visuals",
    "href": "border.html#analysis-and-visuals",
    "title": "Border Crossing Entry Data",
    "section": "Analysis and Visuals",
    "text": "Analysis and Visuals\n\nNumbers by State\n\nclean_border &lt;- read_rds(\"02-clean/border.rds\")\n\n\nclean_border |&gt;\n  count(year)\n\n\n  \n\n\n\n\nborder_state &lt;- clean_border |&gt;\n  filter(\n    year == 2024\n  ) |&gt;\n  group_by(state, year) |&gt;\n  summarize(\n    border_traffic = sum(value)\n  ) |&gt;\n  arrange(desc(border_traffic))\n\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n\nborder_state\n\n\n  \n\n\n\n\nggplot(\n  border_state,\n  aes(x = reorder(state, border_traffic), \n      y = border_traffic,\n      fill = state\n  )\n) +\n  geom_col(\n    aes(),\n    show.legend = FALSE\n  ) +\n  scale_y_continuous(labels = label_comma()) +\n  labs(\n    title = \"Amount of Border Traffic per Border State in 2024\",\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: Department of Transportation\",\n    x = \"State\",\n    y = \"Border Traffic\",\n    fill = \"State\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nAnalysis:\nTexas has by far the most border traffic of any other border state with over 120 million crossings in 2024. Although California is closer behind, there is a steep decrease in border traffic around the Canadian border and other Southern states beyond Texas and California.\n\n\nCountry Border Traffic\n\nborder_country &lt;- clean_border |&gt;\n  group_by(border, year) |&gt;\n  summarize(\n    border_country_traffic = sum(value)\n  ) |&gt;\n  arrange(year, border_country_traffic)\n\n`summarise()` has grouped output by 'border'. You can override using the\n`.groups` argument.\n\nborder_country\n\n\n  \n\n\n\n\nggplot(\n  border_country,\n  aes(\n    x = year,\n    y = border_country_traffic,\n    color = border\n  )\n) +\n  scale_y_continuous(\n    labels = label_comma(),\n    limits = c(0, 400000000)\n  ) +\n  geom_line(\n    aes(),\n    size = 2\n  ) +\n  labs(\n    title = str_wrap(\"Border Traffic at the Canadian and Mexican borders from 1996 until 2024\"),\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: Department of Transportation\",\n    x = \"Year\",\n    y = \"Border Traffic\",\n    color = \"Border\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nAnalysis:\nBorder traffic along the US-Mexico border almost doubled traffic along the US-Canada border. There was a peak for border traffic along the US-Mexico border around and just before 2000, and a dramatic fall in 2020 during the COVID-19 pandemic.\n\n\nTransportation Across the Border(s)\n\nborder_transportation &lt;- clean_border |&gt;\n  group_by(measure, year) |&gt;\n  summarize(\n    transportation_numbers = sum(value)\n  ) |&gt;\n  arrange(year, transportation_numbers)\n\n`summarise()` has grouped output by 'measure'. You can override using the\n`.groups` argument.\n\nborder_transportation\n\n\n  \n\n\n\n\ntransportation_graph &lt;- ggplot(\n  border_transportation,\n  aes(\n    x = year,\n    y = transportation_numbers,\n    color = measure\n  )\n) +\n  scale_y_log10(\n    breaks = c(100000, 1000000, 10000000, 100000000),\n    labels = scales::label_number(accuracy = 1),\n  ) +\n  geom_line(\n    aes(),\n    size = 1\n  ) +\n  labs(\n    title = str_wrap(\"Type of Transportation for Border Traffic from 1996 to 2024\"),\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: Department of Transportation\",\n    x = \"Year\",\n    y = \"Border Traffic Transportation Amount\",\n    color = \"Mode of Transportation\"\n  ) +\n  theme_minimal()\n\ntransportation_graph\n\n\n\n\n\n\n\nggplotly(transportation_graph)\n\n\n\n\n\nAnalysis:\nThe vast majority of border traffic is personal vehicle traffic. Pedestrian border traffic blew me away with almost 50 million pedestrians crossing the border in 2019. Group transportation took a hit during the pandemic, with buses dropping more than half of their report in 2019, from almost 230,000 to almost 100,000 in 2020.",
    "crumbs": [
      "Border Crossing Entry Data"
    ]
  },
  {
    "objectID": "la-crime.html",
    "href": "la-crime.html",
    "title": "Crime in Los Angeles",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(ggthemes)\nlibrary(scales)\nlibrary(plotly)\n## Map Data\nlibrary(mapdata)\nlibrary(maps)\nlibrary(stringr)\nlibrary(viridis)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(ggmagnify)\n\n\nraw_data &lt;- read_csv(\"01-unclean/Los-Angeles_Crime.csv\") |&gt;\n  clean_names()\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 1004847 Columns: 28\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (16): Date Rptd, DATE OCC, TIME OCC, AREA, AREA NAME, Rpt Dist No, Crm C...\ndbl (11): DR_NO, Part 1-2, Crm Cd, Vict Age, Premis Cd, Weapon Used Cd, Crm ...\nlgl  (1): Crm Cd 4\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nla_crime &lt;- raw_data |&gt;\n  mutate(\n    date_reported = mdy_hms(date_rptd), \n    date_occurred = mdy_hms(date_occ),\n    crime_description = crm_cd_desc,\n    year_occurred = year(date_occurred),\n    latitude_unavg = lat,\n    longitude_unavg = lon\n  ) |&gt;\n  select(\n    date_reported,\n    date_occurred,\n    year_occurred,\n    crime_description,\n    premis_desc,\n    latitude_unavg,\n    longitude_unavg,\n    area_name\n  )\n\nraw_data\n\n\n  \n\n\nla_crime",
    "crumbs": [
      "Crime in Los Angeles"
    ]
  },
  {
    "objectID": "la-crime.html#setup",
    "href": "la-crime.html#setup",
    "title": "Crime in Los Angeles",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(ggthemes)\nlibrary(scales)\nlibrary(plotly)\n## Map Data\nlibrary(mapdata)\nlibrary(maps)\nlibrary(stringr)\nlibrary(viridis)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(ggmagnify)\n\n\nraw_data &lt;- read_csv(\"01-unclean/Los-Angeles_Crime.csv\") |&gt;\n  clean_names()\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 1004847 Columns: 28\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (16): Date Rptd, DATE OCC, TIME OCC, AREA, AREA NAME, Rpt Dist No, Crm C...\ndbl (11): DR_NO, Part 1-2, Crm Cd, Vict Age, Premis Cd, Weapon Used Cd, Crm ...\nlgl  (1): Crm Cd 4\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nla_crime &lt;- raw_data |&gt;\n  mutate(\n    date_reported = mdy_hms(date_rptd), \n    date_occurred = mdy_hms(date_occ),\n    crime_description = crm_cd_desc,\n    year_occurred = year(date_occurred),\n    latitude_unavg = lat,\n    longitude_unavg = lon\n  ) |&gt;\n  select(\n    date_reported,\n    date_occurred,\n    year_occurred,\n    crime_description,\n    premis_desc,\n    latitude_unavg,\n    longitude_unavg,\n    area_name\n  )\n\nraw_data\n\n\n  \n\n\nla_crime",
    "crumbs": [
      "Crime in Los Angeles"
    ]
  },
  {
    "objectID": "la-crime.html#analysis-and-visualization",
    "href": "la-crime.html#analysis-and-visualization",
    "title": "Crime in Los Angeles",
    "section": "Analysis and Visualization",
    "text": "Analysis and Visualization\n\nData Wrapper Attempt\n\nla_plot &lt;- la_crime |&gt;\n  filter(\n    year_occurred == \"2024\"\n  ) |&gt;\n  group_by(\n    area_name,\n    crime_description\n  ) |&gt;\n  mutate(\n    area_count = str_count(unique(area_name, \", \")),\n    crime_description = str_wrap(crime_description, width = 20)\n  ) |&gt;\n  summarize(\n    incident_count = sum(area_count, na.rm = TRUE),\n    longitude = mean(longitude_unavg, na.rm = TRUE),\n    latitude = mean(latitude_unavg, na.rm = TRUE),\n    .groups = \"drop\"\n  ) |&gt;\n  arrange(\n    desc(incident_count)\n  ) |&gt;\n  head(50)\n  \nla_plot\n\n\n  \n\n\n\n\nla_plot |&gt;\n  write_csv(\"02-clean/la-crime.csv\")\n\n\nState Import\n\ncalifornia &lt;- map_data(\"state\") |&gt;\n  filter(\n    region == \"california\"\n  )\n\ncalifornia\n\n\n  \n\n\nla_county &lt;- map_data(\"county\") |&gt;\n  filter(\n    region == \"california\",\n    subregion == \"los angeles\"\n  )\n\nla_county\n\n\n  \n\n\n\n\ncalifornia_base &lt;- ggplot() +\n  geom_polygon(\n    data = california,\n    aes(\n      x = long,\n      y = lat,\n    ),\n    color = \"black\",\n    fill = \"cornflowerblue\"\n  ) +\n  coord_quickmap()\n\ncala_plot &lt;- california_base +\n  geom_polygon(\n    data = la_county,\n    aes(\n      x = long,\n      y = lat,\n    ),\n    color = \"black\",\n    fill = \"white\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    legend.title = element_text(size = 8),\n    legend.text = element_text(size = 6),  # Adjust legend text size\n    legend.key.width = unit(1, \"cm\"),  # Widen legend items\n    plot.title.position = \"plot\",  # Align title/subtitle properly\n    legend.box = \"horizontal\"\n  ) +\n  coord_quickmap()\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n\ncala_plot\n\n\n\n\n\n\n\n\n\n\nZoom\n\nla_plot &lt;- ggplot() +\n  geom_polygon(\n    data = la_county,\n    aes(\n      x = long,\n      y = lat,\n    ),\n    fill = \"white\",\n    color = \"gray\"\n  ) +\n  geom_point(\n    data = la_plot,\n    alpha = 0.5,\n    aes(\n      x = longitude,\n      y = latitude,\n      size = incident_count,\n      color = crime_description\n    )\n  ) +\n  scale_size_continuous(range = c(1,10)) +\n  coord_cartesian(\n      xlim = c(-119, -118.5), \n      ylim = c(33.7, 34.2)\n  ) +\n  coord_quickmap() +\n  labs(\n    title = str_wrap(\"Top 50 Incident Locations in Los Angeles in 2024\"),\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: City of Los Angeles\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    size = \"Incident Count\",\n    color = \"Type of Crime\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    legend.title = element_text(size = 8),\n    legend.text = element_text(size = 6),  # Adjust legend text size\n    legend.key.width = unit(1, \"cm\"),  # Widen legend items\n    plot.title.position = \"plot\",  # Align title/subtitle properly\n    legend.box = \"horizontal\"\n  )\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n\nfrom &lt;- c(xmin = -119, xmax = -118, ymin = 33.7, ymax = 34.5)\n# Names xmin, xmax, ymin, ymax are optional:\nto &lt;- c(3 - 1, 3 + 1,1, 2) ## UGH NOTHING WORKSSS\n\nla_plot + geom_magnify(from = from, to = to)\n\n\n\n\n\n\n\n\nRevised Analysis:\n\ncrime_year &lt;- la_crime |&gt;\n  mutate(\n    crime_description = str_wrap(\n      crime_description, width = 20\n    )\n  ) |&gt;\n  group_by(\n    year_occurred,\n    crime_description\n  ) |&gt;\n  summarize(\n    incident_count = n(),\n    .groups = \"drop\"\n  ) |&gt;\n  group_by(\n    year_occurred\n  ) |&gt;\n  slice_max(\n    incident_count,\n    n = 10,\n    with_ties = FALSE\n  )\n\ncrime_year\n\n\n  \n\n\n\n\ntop10_plot &lt;- ggplot(\n  crime_year,\n  aes(\n    x = year_occurred,\n    y = incident_count,\n    color = crime_description\n  )\n) +\n  geom_point(\n    show.legend = FALSE,\n    size = 2.2\n  ) +\n  geom_line(\n    linewidth = 1.5\n  ) +\n  labs(\n    title = \"Top 10 Crimes in Los Angeles from 2020 to 2024\",\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: City of Los Angeles\",\n    x = \"Year\",\n    y = \"Number of Incidents\",\n    color = \"Type of Crime\"\n  )\n  theme_minimal()\n\nList of 136\n $ line                            :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ lineend      : chr \"butt\"\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                            :List of 5\n  ..$ fill         : chr \"white\"\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                            :List of 11\n  ..$ family       : chr \"\"\n  ..$ face         : chr \"plain\"\n  ..$ colour       : chr \"black\"\n  ..$ size         : num 11\n  ..$ hjust        : num 0.5\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 0\n  ..$ lineheight   : num 0.9\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ title                           : NULL\n $ aspect.ratio                    : NULL\n $ axis.title                      : NULL\n $ axis.title.x                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.75points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.top                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.75points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.bottom             : NULL\n $ axis.title.y                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.75points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y.left               : NULL\n $ axis.title.y.right              :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.75points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text                       :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"grey30\"\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.2points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top                 :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.2points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.bottom              : NULL\n $ axis.text.y                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y.left                : NULL\n $ axis.text.y.right               :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.theta                 : NULL\n $ axis.text.r                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0.5\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.x                    : NULL\n $ axis.ticks.x.top                : NULL\n $ axis.ticks.x.bottom             : NULL\n $ axis.ticks.y                    : NULL\n $ axis.ticks.y.left               : NULL\n $ axis.ticks.y.right              : NULL\n $ axis.ticks.theta                : NULL\n $ axis.ticks.r                    : NULL\n $ axis.minor.ticks.x.top          : NULL\n $ axis.minor.ticks.x.bottom       : NULL\n $ axis.minor.ticks.y.left         : NULL\n $ axis.minor.ticks.y.right        : NULL\n $ axis.minor.ticks.theta          : NULL\n $ axis.minor.ticks.r              : NULL\n $ axis.ticks.length               : 'simpleUnit' num 2.75points\n  ..- attr(*, \"unit\")= int 8\n $ axis.ticks.length.x             : NULL\n $ axis.ticks.length.x.top         : NULL\n $ axis.ticks.length.x.bottom      : NULL\n $ axis.ticks.length.y             : NULL\n $ axis.ticks.length.y.left        : NULL\n $ axis.ticks.length.y.right       : NULL\n $ axis.ticks.length.theta         : NULL\n $ axis.ticks.length.r             : NULL\n $ axis.minor.ticks.length         : 'rel' num 0.75\n $ axis.minor.ticks.length.x       : NULL\n $ axis.minor.ticks.length.x.top   : NULL\n $ axis.minor.ticks.length.x.bottom: NULL\n $ axis.minor.ticks.length.y       : NULL\n $ axis.minor.ticks.length.y.left  : NULL\n $ axis.minor.ticks.length.y.right : NULL\n $ axis.minor.ticks.length.theta   : NULL\n $ axis.minor.ticks.length.r       : NULL\n $ axis.line                       : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.line.x                     : NULL\n $ axis.line.x.top                 : NULL\n $ axis.line.x.bottom              : NULL\n $ axis.line.y                     : NULL\n $ axis.line.y.left                : NULL\n $ axis.line.y.right               : NULL\n $ axis.line.theta                 : NULL\n $ axis.line.r                     : NULL\n $ legend.background               : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.margin                   : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing                  : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing.x                : NULL\n $ legend.spacing.y                : NULL\n $ legend.key                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.key.size                 : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height               : NULL\n $ legend.key.width                : NULL\n $ legend.key.spacing              : 'simpleUnit' num 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key.spacing.x            : NULL\n $ legend.key.spacing.y            : NULL\n $ legend.frame                    : NULL\n $ legend.ticks                    : NULL\n $ legend.ticks.length             : 'rel' num 0.2\n $ legend.axis.line                : NULL\n $ legend.text                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.position            : NULL\n $ legend.title                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.position           : NULL\n $ legend.position                 : chr \"right\"\n $ legend.position.inside          : NULL\n $ legend.direction                : NULL\n $ legend.byrow                    : NULL\n $ legend.justification            : chr \"center\"\n $ legend.justification.top        : NULL\n $ legend.justification.bottom     : NULL\n $ legend.justification.left       : NULL\n $ legend.justification.right      : NULL\n $ legend.justification.inside     : NULL\n $ legend.location                 : NULL\n $ legend.box                      : NULL\n $ legend.box.just                 : NULL\n $ legend.box.margin               : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n  ..- attr(*, \"unit\")= int 1\n $ legend.box.background           : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.box.spacing              : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n  [list output truncated]\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\ntop10_plot\n\n\n\n\n\n\n\nggplotly(top10_plot)\n\n\n\n\n\nAnalysis:\nThe most frequent crimes in Los Angeles are non-violent, with an exception of assault and battery. As of 2024, crime in Los Angeles, on all fronts, is declining. Interestingly, in 2022, identity theft was the second most frequent crime, with over 22,000 occurrences. Stolen vehicles have remained at the top of the list over all four years, and it saw a slight peak of almost 25,000 occurrences, also in 2022.\n\ntop10_bar &lt;- ggplot(\n  crime_year,\n  aes(\n    x = crime_description,\n    y = incident_count,\n    fill = crime_description\n  )\n) +\n  geom_col() +\n  labs(\n    title = \"Top 10 Crimes in Los Angeles from 2020 to 2024\",\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: City of Los Angeles\",\n    x = \"Year\",\n    y = \"Number of Incidents\",\n    fill = \"Type of Crime\"\n  ) +\n  facet_wrap(\n    ~year_occurred\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_blank()\n  )\n\ntop10_bar\n\n\n\n\n\n\n\nggplotly(top10_bar)",
    "crumbs": [
      "Crime in Los Angeles"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Assignment #1:\n\nAnalyze three different (simple) datasets in RStudio\n\nProvide Quarto sites/code for each dataset to review\nCreate a graphic using ggplot, plotly or Datawrapper for each set (each must be a different visual style — line, bar, map etc.)\n\nFor one of the previous sets, create three graphics from the same data (each a different visual style)\n\n\n\nAnalyses\nI analyzed three different datasets from https://data.gov/.\n\nBorder Crossing Entry Data, Analysis\n\n\nTexas has by far the most border traffic of any other border state with over 120 million crossings in 2024. Although California is closer behind, there is a steep decrease in border traffic around the Canadian border and other Southern states beyond Texas and California.\nBorder traffic along the US-Mexico border almost doubled traffic along the US-Canada border. There was a peak for border traffic along the US-Mexico border around and just before 2000, and a dramatic fall in 2020 during the COVID-19 pandemic.\nThe vast majority of border traffic is personal vehicle traffic. Pedestrian border traffic blew me away with almost 50 million pedestrians crossing the border in 2019. Group transportation took a hit during the pandemic, with buses dropping more than half of their report in 2019, from almost 230,000 to almost 100,000 in 2020.\n\n\nMost Popular Baby Names in New York City, Analysis\n\n\nEsther and Isabella fought from 2018 to 2020 for the title of most popular, and Esther was, in 2021, the most popular baby name in New York City. This being said, the amount of people naming their female babies the most popular name was on a steep decline over the ten year period.\nOn a different note, regarding male baby names, it seems to be more popular to name babies the most popular name of the year. This is a strong comparison from almost 450 babies named Liam in 2021 and under 200 named Esther.\n\n\nCrime in Los Angeles, Analysis\n\n\nThe most frequent crimes in Los Angeles are non-violent, with an exception of assault and battery. As of 2024, crime in Los Angeles, on all fronts, is declining. Interestingly, in 2022, identity theft was the second most frequent crime, with over 22,000 occurrences. Stolen vehicles have remained at the top of the list over all four years, and it saw a slight peak of almost 25,000 occurrences, also in 2022.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "baby-names.html",
    "href": "baby-names.html",
    "title": "Most Popular Baby Names in New York City",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(stringr)\n\n\n\n\nbaby_names &lt;- read_csv(\"01-unclean/Popular_Baby_Names.csv\") |&gt;\n  clean_names() |&gt;\n  distinct()\n\nRows: 69214 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Gender, Ethnicity, Child's First Name\ndbl (3): Year of Birth, Count, Rank\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nbaby_names\n\n\n  \n\n\n\n\n\n\n\nclean_names &lt;- baby_names |&gt;\n  select(\n    year_of_birth,\n    gender,\n    childs_first_name,\n    count,\n    ethnicity\n  ) |&gt;\n  mutate(\n    childs_first_name = str_to_upper(childs_first_name) |&gt;\n      str_trim()\n  ) |&gt;\n  group_by(\n    year_of_birth,\n    gender,\n    childs_first_name\n  ) |&gt;\n  summarize(\n    total_count = sum(count, na.rm = TRUE),\n    ethnicity_list = str_c(unique(ethnicity), collapse = \", \"),\n    .groups = \"drop\"\n  )\n\nclean_names\n\n\n  \n\n\n\n\npopular &lt;- clean_names |&gt;\n  group_by(\n    year_of_birth,\n    gender\n    # gender, name, and sum of ethnicity count for different babies -- will get you most popular accumulated name rather than separated by race\n  ) |&gt;\n  slice_max(\n    total_count,\n    n = 2,\n    with_ties = FALSE\n  ) |&gt;\n  ungroup() |&gt;\n  arrange(year_of_birth, gender)\n\npopular\n\n\n  \n\n\n\n\npopular_girl &lt;- popular |&gt;\n  filter(\n    gender == \"FEMALE\"\n  )\n\npopular_girl\n\n\n  \n\n\n\n\npopular_boy &lt;- popular |&gt;\n  filter(\n    gender == \"MALE\"\n  )\n\npopular_boy\n\n\n  \n\n\n\n\nggplot(\n  popular_girl,\n  aes(\n      x = year_of_birth,\n      y = total_count,\n      color = childs_first_name\n    )\n) +\n  geom_point(\n    size = 3\n  ) +\n  scale_color_manual(\n    values = c(\n      \"EMMA\" = \"darkgoldenrod1\",\n      \"SOPHIA\" = \"darkorchid2\",\n      \"OLIVIA\" = \"red2\",\n      \"ISABELLA\" = \"blue3\"\n    )\n  ) +\n  scale_y_continuous(expand=c(0, 0), limits=c(0, 700)) +\n  labs(\n    title = str_wrap(\"Most Popular Female Baby Names in New York City Between 2011 and 2021\"),\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: City of New York\",\n    x = \"Year\",\n    y = \"Number of Babies\",\n    color = \"Child's First Name\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAnalysis:\nEsther and Isabella fought from 2018 to 2020 for the title of most popular, and Esther was, in 2021, the most popular baby name in New York City. This being said, the amount of people naming their female babies the most popular name was on a steep decline over the ten year period.\nRevised Analysis:\n\n# add zero\n#| label: popular boy graph\n\nggplot(\n  popular_boy,\n  aes(\n      x = year_of_birth,\n      y = total_count,\n      color = childs_first_name\n    )\n) +\n  geom_point(\n    aes(),\n    size = 4\n  ) +\n  scale_color_manual(\n    values = c(\n      \"LIAM\" = \"coral1\",\n      \"JAYDEN\" = \"cornflowerblue\",\n      \"ETHAN\" = \"green3\"\n    )\n  ) +\n  scale_y_continuous(expand=c(0, 0), limits=c(0, 900)) +\n  labs(\n    title = str_wrap(\"Most Popular Male Baby Names in the New York City Between 2011 and 2021\"),\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: City of New York\",\n    x = \"Year\",\n    y = \"Number of Babies\",\n    color = \"Child's First Name\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAnalysis:\nOn a different note, regarding male baby names, it seems to be more popular to name babies the most popular name of the year. This is a strong comparison from almost 450 babies named Liam in 2021 and under 200 named Esther.\nRevised Analysis:",
    "crumbs": [
      "Most Popular Baby Names in New York City"
    ]
  },
  {
    "objectID": "baby-names.html#setup",
    "href": "baby-names.html#setup",
    "title": "Most Popular Baby Names in New York City",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(stringr)\n\n\n\n\nbaby_names &lt;- read_csv(\"01-unclean/Popular_Baby_Names.csv\") |&gt;\n  clean_names() |&gt;\n  distinct()\n\nRows: 69214 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Gender, Ethnicity, Child's First Name\ndbl (3): Year of Birth, Count, Rank\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nbaby_names\n\n\n  \n\n\n\n\n\n\n\nclean_names &lt;- baby_names |&gt;\n  select(\n    year_of_birth,\n    gender,\n    childs_first_name,\n    count,\n    ethnicity\n  ) |&gt;\n  mutate(\n    childs_first_name = str_to_upper(childs_first_name) |&gt;\n      str_trim()\n  ) |&gt;\n  group_by(\n    year_of_birth,\n    gender,\n    childs_first_name\n  ) |&gt;\n  summarize(\n    total_count = sum(count, na.rm = TRUE),\n    ethnicity_list = str_c(unique(ethnicity), collapse = \", \"),\n    .groups = \"drop\"\n  )\n\nclean_names\n\n\n  \n\n\n\n\npopular &lt;- clean_names |&gt;\n  group_by(\n    year_of_birth,\n    gender\n    # gender, name, and sum of ethnicity count for different babies -- will get you most popular accumulated name rather than separated by race\n  ) |&gt;\n  slice_max(\n    total_count,\n    n = 2,\n    with_ties = FALSE\n  ) |&gt;\n  ungroup() |&gt;\n  arrange(year_of_birth, gender)\n\npopular\n\n\n  \n\n\n\n\npopular_girl &lt;- popular |&gt;\n  filter(\n    gender == \"FEMALE\"\n  )\n\npopular_girl\n\n\n  \n\n\n\n\npopular_boy &lt;- popular |&gt;\n  filter(\n    gender == \"MALE\"\n  )\n\npopular_boy\n\n\n  \n\n\n\n\nggplot(\n  popular_girl,\n  aes(\n      x = year_of_birth,\n      y = total_count,\n      color = childs_first_name\n    )\n) +\n  geom_point(\n    size = 3\n  ) +\n  scale_color_manual(\n    values = c(\n      \"EMMA\" = \"darkgoldenrod1\",\n      \"SOPHIA\" = \"darkorchid2\",\n      \"OLIVIA\" = \"red2\",\n      \"ISABELLA\" = \"blue3\"\n    )\n  ) +\n  scale_y_continuous(expand=c(0, 0), limits=c(0, 700)) +\n  labs(\n    title = str_wrap(\"Most Popular Female Baby Names in New York City Between 2011 and 2021\"),\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: City of New York\",\n    x = \"Year\",\n    y = \"Number of Babies\",\n    color = \"Child's First Name\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAnalysis:\nEsther and Isabella fought from 2018 to 2020 for the title of most popular, and Esther was, in 2021, the most popular baby name in New York City. This being said, the amount of people naming their female babies the most popular name was on a steep decline over the ten year period.\nRevised Analysis:\n\n# add zero\n#| label: popular boy graph\n\nggplot(\n  popular_boy,\n  aes(\n      x = year_of_birth,\n      y = total_count,\n      color = childs_first_name\n    )\n) +\n  geom_point(\n    aes(),\n    size = 4\n  ) +\n  scale_color_manual(\n    values = c(\n      \"LIAM\" = \"coral1\",\n      \"JAYDEN\" = \"cornflowerblue\",\n      \"ETHAN\" = \"green3\"\n    )\n  ) +\n  scale_y_continuous(expand=c(0, 0), limits=c(0, 900)) +\n  labs(\n    title = str_wrap(\"Most Popular Male Baby Names in the New York City Between 2011 and 2021\"),\n    subtitle = str_wrap(\"Chart created by Meredith Roberts for the Data Visualization Independent Study.\"),\n    caption = \"Source: City of New York\",\n    x = \"Year\",\n    y = \"Number of Babies\",\n    color = \"Child's First Name\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAnalysis:\nOn a different note, regarding male baby names, it seems to be more popular to name babies the most popular name of the year. This is a strong comparison from almost 450 babies named Liam in 2021 and under 200 named Esther.\nRevised Analysis:",
    "crumbs": [
      "Most Popular Baby Names in New York City"
    ]
  }
]